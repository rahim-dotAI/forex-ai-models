name: Run AI Forex Notebook

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  run-notebook:
    runs-on: ubuntu-latest
    env:
      FOREX_PAT: ${{ secrets.FOREX_PAT }}
      BROWSERLESS_TOKEN: ${{ secrets.BROWSERLESS_TOKEN }}
      GIT_USER_EMAIL: nakatonabira3@gmail.com
      PYTHONIOENCODING: utf-8

    steps:
      # 1Ô∏è‚É£ Clean checkout (no old auth, no submodules)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
          lfs: true  # Enable LFS handling

      # 2Ô∏è‚É£ Remove any accidental submodule remnants
      - name: Remove stray submodules if exist
        run: |
          echo "üßπ Cleaning stray submodules..."
          git submodule deinit -f --all || true
          rm -rf .git/modules || true
          rm -rf .gitmodules || true
          git rm -rf forex_ai_outputs/forex-ai-models || true
          echo "‚úÖ Cleaned submodules and nested clones"

      # 3Ô∏è‚É£ Verify secrets
      - name: Check required secrets
        run: |
          if [ -z "${FOREX_PAT}" ]; then
            echo "‚ùå FOREX_PAT secret is missing!"
            exit 1
          fi
          echo "‚úÖ Secrets verified."

      # 4Ô∏è‚É£ Install system deps & Git LFS
      - name: Install Git LFS
        run: |
          sudo apt-get update -y
          sudo apt-get install -y git-lfs
          git lfs install
          git lfs track "*.csv" "*.pkl"
          echo "‚úÖ LFS initialized."

      # 5Ô∏è‚É£ Setup Python
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # 6Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupyter papermill ipykernel pandas numpy matplotlib seaborn scikit-learn yfinance requests joblib ta

      # 7Ô∏è‚É£ Register Python kernel
      - name: Register kernel
        run: python -m ipykernel install --user --name python3 --display-name "Python 3"

      # 8Ô∏è‚É£ Symlink /content for Colab compatibility
      - name: Create /content symlink
        run: |
          sudo mkdir -p /content
          sudo ln -sf "$(pwd)" /content
          echo "‚úÖ Symlink created."

      # 9Ô∏è‚É£ Create output folder
      - name: Create output folder
        run: mkdir -p output

      # üîü Run the notebook with retry logic
      - name: Execute AI_Forex_Brain notebook
        run: |
          MAX_RETRIES=3
          COUNT=0
          until [ $COUNT -ge $MAX_RETRIES ]
          do
            echo "üöÄ Attempt $((COUNT+1))..."
            papermill "AI_Forex_Brain 2.ipynb" "output/AI_Forex_Brain_Executed.ipynb" -k python3 && break
            COUNT=$((COUNT+1))
            echo "‚ö†Ô∏è Failed. Retrying in 10s... ($COUNT/$MAX_RETRIES)"
            sleep 10
          done
          if [ $COUNT -eq $MAX_RETRIES ]; then
            echo "‚ùå Notebook failed after $MAX_RETRIES retries."
            exit 1
          fi

      # 1Ô∏è‚É£1Ô∏è‚É£ Upload executed notebook artifact
      - name: Upload executed notebook
        uses: actions/upload-artifact@v4
        with:
          name: AI_Forex_Brain_Executed
          path: output/AI_Forex_Brain_Executed.ipynb

      # 1Ô∏è‚É£2Ô∏è‚É£ Commit and push results
      - name: Commit and push results (with PAT)
        if: success()
        env:
          GIT_AUTH_TOKEN: ${{ secrets.FOREX_PAT }}
        run: |
          echo "üîß Setting up Git credentials..."
          git config --global user.name "Rahim AI Bot"
          git config --global user.email "${GIT_USER_EMAIL}"

          echo "ü™£ Staging output files..."
          git add output/*.ipynb || echo "‚ö†Ô∏è No new notebooks"
          git add *.csv *.pkl || echo "‚ö†Ô∏è No LFS files to stage"

          echo "üí¨ Checking for changes..."
          git diff --staged --quiet || git commit -m "ü§ñ Auto-update: executed AI_Forex_Brain notebook [$(date)]"

          echo "üîó Updating remote to use PAT..."
          git remote set-url origin https://x-access-token:${GIT_AUTH_TOKEN}@github.com/${{ github.repository }}.git

          echo "üì§ Pushing to main..."
          git push origin main || echo "‚ö†Ô∏è Nothing new to push."
          echo "‚úÖ Push complete."
